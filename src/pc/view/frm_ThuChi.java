/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pc.view;

import Controller.PhieuChiControl;
import Controller.PhieuThuControl;
import Model.PhieuChiModel;
import Model.PhieuThuModel;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pc.controler.NhanVienControl;
import pc.model.NhanVienModel;

/**
 *
 * @author Administrator
 */
public class frm_ThuChi extends javax.swing.JFrame {

    ArrayList<PhieuChiModel> dspc;
    ArrayList<PhieuThuModel> dspt;

    /**
     * Creates new form frm_ThuChi
     */
    public frm_ThuChi() {
        initComponents();
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // Xử lý khi form được đóng
                frm_MeNu formMeNu = new frm_MeNu();
                formMeNu.setVisible(true);
                formMeNu.setLocationRelativeTo(null);
            }
        });
        loadComBoBoxMaNhanVienPC();
        loadComBoBoxMaNhanVienPT();
        hienThiDuLieuPC();
        hienThiDuLieuPT();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaPC = new javax.swing.JTextField();
        txtMaNVPC = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNgayLapPC = new javax.swing.JTextField();
        txtTongPC = new javax.swing.JTextField();
        btnThemPC = new javax.swing.JButton();
        btnSuaPC = new javax.swing.JButton();
        btnXoaPC = new javax.swing.JButton();
        jcbMaNhanVienPC = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPhieuChi = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtTimKiemPC = new javax.swing.JTextField();
        btnTimKiemPC = new javax.swing.JButton();
        btnHuyTimKiemPC = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaPT = new javax.swing.JTextField();
        txtMaNVPT = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNgayLapPT = new javax.swing.JTextField();
        txtTongPT = new javax.swing.JTextField();
        btnThemPT = new javax.swing.JButton();
        btnSuaPT = new javax.swing.JButton();
        btnXoaPT = new javax.swing.JButton();
        jcbMaNhanVienPT = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPhieuThu = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        txtTimKiemPT = new javax.swing.JTextField();
        btnTimKiemPT = new javax.swing.JButton();
        btnHuyTimKiemPT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý thu chi");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Mã phiếu chi");

        jLabel2.setText("Mã nhân viên");

        txtMaNVPC.setEditable(false);
        txtMaNVPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNVPCActionPerformed(evt);
            }
        });

        jLabel3.setText("Ngày lập");

        jLabel4.setText("Tổng giá trị");

        btnThemPC.setText("Thêm");
        btnThemPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPCActionPerformed(evt);
            }
        });

        btnSuaPC.setText("Sửa");
        btnSuaPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaPCActionPerformed(evt);
            }
        });

        btnXoaPC.setText("Xóa");
        btnXoaPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaPCActionPerformed(evt);
            }
        });

        jcbMaNhanVienPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMaNhanVienPCActionPerformed(evt);
            }
        });

        tbPhieuChi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu chi", "Mã nhân viên", "Ngày lập", "Tổng giá trị"
            }
        ));
        tbPhieuChi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPhieuChiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbPhieuChi);

        jLabel5.setText("Mã phiếu chi");

        btnTimKiemPC.setText("Tìm kiếm");
        btnTimKiemPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemPCActionPerformed(evt);
            }
        });

        btnHuyTimKiemPC.setText("Hủy bỏ tìm kiếm");
        btnHuyTimKiemPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyTimKiemPCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThemPC)
                        .addGap(26, 26, 26)
                        .addComponent(btnSuaPC)
                        .addGap(28, 28, 28)
                        .addComponent(btnXoaPC))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaPC, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(txtMaNVPC))
                        .addGap(18, 18, 18)
                        .addComponent(jcbMaNhanVienPC, 0, 91, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNgayLapPC)
                    .addComponent(txtTongPC, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel5)
                .addGap(42, 42, 42)
                .addComponent(txtTimKiemPC, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btnTimKiemPC)
                .addGap(35, 35, 35)
                .addComponent(btnHuyTimKiemPC)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtNgayLapPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaNVPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtTongPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbMaNhanVienPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemPC)
                    .addComponent(btnSuaPC)
                    .addComponent(btnXoaPC))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTimKiemPC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiemPC)
                    .addComponent(btnHuyTimKiemPC))
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("Phiếu chi", jPanel1);

        jLabel6.setText("Mã phiếu thu");

        jLabel7.setText("Mã nhân viên");

        txtMaNVPT.setEditable(false);

        jLabel8.setText("Ngày lập");

        jLabel9.setText("Tổng giá trị");

        btnThemPT.setText("Thêm");
        btnThemPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemPTActionPerformed(evt);
            }
        });

        btnSuaPT.setText("Sửa");
        btnSuaPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaPTActionPerformed(evt);
            }
        });

        btnXoaPT.setText("Xóa");
        btnXoaPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaPTActionPerformed(evt);
            }
        });

        jcbMaNhanVienPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMaNhanVienPTActionPerformed(evt);
            }
        });

        tbPhieuThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu thu", "Mã nhân viên", "Ngày lập", "Tổng giá trị"
            }
        ));
        tbPhieuThu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbPhieuThuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbPhieuThu);

        jLabel10.setText("Mã phiếu thu");

        btnTimKiemPT.setText("Tìm kiếm");
        btnTimKiemPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemPTActionPerformed(evt);
            }
        });

        btnHuyTimKiemPT.setText("Hủy bỏ tìm kiếm");
        btnHuyTimKiemPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyTimKiemPTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThemPT)
                        .addGap(26, 26, 26)
                        .addComponent(btnSuaPT)
                        .addGap(28, 28, 28)
                        .addComponent(btnXoaPT))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaPT, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(txtMaNVPT))
                        .addGap(18, 18, 18)
                        .addComponent(jcbMaNhanVienPT, 0, 91, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNgayLapPT)
                    .addComponent(txtTongPT, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel10)
                .addGap(42, 42, 42)
                .addComponent(txtTimKiemPT, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnTimKiemPT)
                .addGap(32, 32, 32)
                .addComponent(btnHuyTimKiemPT)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMaPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtNgayLapPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMaNVPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtTongPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbMaNhanVienPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemPT)
                    .addComponent(btnSuaPT)
                    .addComponent(btnXoaPT))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtTimKiemPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiemPT)
                    .addComponent(btnHuyTimKiemPT))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 668, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 405, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Phiếu thu", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPTActionPerformed
        // TODO add your handling code here:
        ThemPT();
    }//GEN-LAST:event_btnThemPTActionPerformed

    private void jcbMaNhanVienPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMaNhanVienPTActionPerformed
        // TODO add your handling code here:
        txtMaNVPT.setText(jcbMaNhanVienPT.getSelectedItem().toString());
    }//GEN-LAST:event_jcbMaNhanVienPTActionPerformed

    private void jcbMaNhanVienPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMaNhanVienPCActionPerformed
        // TODO add your handling code here:
        txtMaNVPC.setText(jcbMaNhanVienPC.getSelectedItem().toString());
    }//GEN-LAST:event_jcbMaNhanVienPCActionPerformed

    private void btnThemPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemPCActionPerformed
        // TODO add your handling code here:
        ThemPC();
    }//GEN-LAST:event_btnThemPCActionPerformed

    private void tbPhieuChiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPhieuChiMouseClicked
        // TODO add your handling code here:
        tblePCMouseClicked(evt);
    }//GEN-LAST:event_tbPhieuChiMouseClicked

    private void txtMaNVPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNVPCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNVPCActionPerformed

    private void btnSuaPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaPCActionPerformed
        // TODO add your handling code here:
        suaPC();
    }//GEN-LAST:event_btnSuaPCActionPerformed

    private void btnXoaPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaPCActionPerformed
        // TODO add your handling code here:
        xoaPC();
    }//GEN-LAST:event_btnXoaPCActionPerformed

    private void btnSuaPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaPTActionPerformed
        // TODO add your handling code here:
        suaPT();
    }//GEN-LAST:event_btnSuaPTActionPerformed

    private void btnXoaPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaPTActionPerformed
        // TODO add your handling code here:
        xoaPT();
    }//GEN-LAST:event_btnXoaPTActionPerformed

    private void tbPhieuThuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbPhieuThuMouseClicked
        // TODO add your handling code here:
        tblePTMouseClicked(evt);
    }//GEN-LAST:event_tbPhieuThuMouseClicked

    private void btnTimKiemPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemPCActionPerformed
        // TODO add your handling code here:
        timKiemPC();
    }//GEN-LAST:event_btnTimKiemPCActionPerformed

    private void btnTimKiemPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemPTActionPerformed
        // TODO add your handling code here:
        timKiemPT();
    }//GEN-LAST:event_btnTimKiemPTActionPerformed

    private void btnHuyTimKiemPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyTimKiemPCActionPerformed
        // TODO add your handling code here:
        hienThiDuLieuPC();
    }//GEN-LAST:event_btnHuyTimKiemPCActionPerformed

    private void btnHuyTimKiemPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyTimKiemPTActionPerformed
        // TODO add your handling code here:
        hienThiDuLieuPT();
    }//GEN-LAST:event_btnHuyTimKiemPTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_ThuChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_ThuChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_ThuChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_ThuChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_ThuChi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuyTimKiemPC;
    private javax.swing.JButton btnHuyTimKiemPT;
    private javax.swing.JButton btnSuaPC;
    private javax.swing.JButton btnSuaPT;
    private javax.swing.JButton btnThemPC;
    private javax.swing.JButton btnThemPT;
    private javax.swing.JButton btnTimKiemPC;
    private javax.swing.JButton btnTimKiemPT;
    private javax.swing.JButton btnXoaPC;
    private javax.swing.JButton btnXoaPT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jcbMaNhanVienPC;
    private javax.swing.JComboBox<String> jcbMaNhanVienPT;
    private javax.swing.JTable tbPhieuChi;
    private javax.swing.JTable tbPhieuThu;
    private javax.swing.JTextField txtMaNVPC;
    private javax.swing.JTextField txtMaNVPT;
    private javax.swing.JTextField txtMaPC;
    private javax.swing.JTextField txtMaPT;
    private javax.swing.JTextField txtNgayLapPC;
    private javax.swing.JTextField txtNgayLapPT;
    private javax.swing.JTextField txtTimKiemPC;
    private javax.swing.JTextField txtTimKiemPT;
    private javax.swing.JTextField txtTongPC;
    private javax.swing.JTextField txtTongPT;
    // End of variables declaration//GEN-END:variables

    private void tblePCMouseClicked(MouseEvent evt) {
        if (this.tbPhieuChi.getSelectedRow() >= 0) {
            String MaPC = this.tbPhieuChi.getValueAt(this.tbPhieuChi.getSelectedRow(), 0).toString();
            txtMaPC.setText(MaPC);
            String MaNV = this.tbPhieuChi.getValueAt(this.tbPhieuChi.getSelectedRow(), 1).toString();
            txtMaNVPC.setText(MaNV);
            String NgayLap = this.tbPhieuChi.getValueAt(this.tbPhieuChi.getSelectedRow(), 2).toString();
            txtNgayLapPC.setText(NgayLap);
            String Tong = this.tbPhieuChi.getValueAt(this.tbPhieuChi.getSelectedRow(), 3).toString();
            txtTongPC.setText(Tong);
        }
    }
    
    private void tblePTMouseClicked(MouseEvent evt) {
        if (this.tbPhieuThu.getSelectedRow() >= 0) {
            String MaPC = this.tbPhieuThu.getValueAt(this.tbPhieuThu.getSelectedRow(), 0).toString();
            txtMaPT.setText(MaPC);
            String MaNV = this.tbPhieuThu.getValueAt(this.tbPhieuThu.getSelectedRow(), 1).toString();
            txtMaNVPT.setText(MaNV);
            String NgayLap = this.tbPhieuThu.getValueAt(this.tbPhieuThu.getSelectedRow(), 2).toString();
            txtNgayLapPT.setText(NgayLap);
            String Tong = this.tbPhieuThu.getValueAt(this.tbPhieuThu.getSelectedRow(), 3).toString();
            txtTongPT.setText(Tong);
        }
    }

    public void loadComBoBoxMaNhanVienPC() {
        NhanVienControl nvconControl = new NhanVienControl();
        ArrayList<NhanVienModel> ds = nvconControl.layThongTinComBoBoxNhanVien();
        DefaultComboBoxModel cbo = new DefaultComboBoxModel();
        for (NhanVienModel d : ds) {
            cbo.addElement(d);
        }
        jcbMaNhanVienPC.setModel(cbo);
        //jcbMaNhanVienXuat.setModel(cbo);
    }

    public void loadComBoBoxMaNhanVienPT() {
        NhanVienControl nvconControl = new NhanVienControl();
        ArrayList<NhanVienModel> ds = nvconControl.layThongTinComBoBoxNhanVien();
        DefaultComboBoxModel cbo = new DefaultComboBoxModel();
        for (NhanVienModel d : ds) {
            cbo.addElement(d);
        }
        jcbMaNhanVienPT.setModel(cbo);
        //jcbMaNhanVienXuat.setModel(cbo);
    }

    public void hienThiDuLieuPC() {
        PhieuChiControl pcControl = new PhieuChiControl();
        dspc = pcControl.docPhieuChi();
        DefaultTableModel dftb = (DefaultTableModel) tbPhieuChi.getModel();
        dftb.setRowCount(0);

        for (int i = 0; i < dspc.size(); i++) {
            String maPC = dspc.get(i).getMaPC();
            String maNV = dspc.get(i).getMaNV();
            Date ngayThu = dspc.get(i).getNgayChi();
            BigDecimal tong = dspc.get(i).getTong();
            Object[] data = new Object[]{maPC, maNV, ngayThu, tong};
            dftb.addRow(data);
        }
    }

    public void hienThiDuLieuPT() {
        PhieuThuControl ptControl = new PhieuThuControl();
        dspt = ptControl.docPhieuThu();
        DefaultTableModel dftb = (DefaultTableModel) tbPhieuThu.getModel();
        dftb.setRowCount(0);

        for (int i = 0; i < dspt.size(); i++) {
            String maPT = dspt.get(i).getMaPT();
            String maNV = dspt.get(i).getMaNV();
            Date ngayThu = dspt.get(i).getNgayThu();
            BigDecimal tong = dspt.get(i).getTong();
            Object[] data = new Object[]{maPT, maNV, ngayThu, tong};
            dftb.addRow(data);
        }
    }

    public void ThemPC() {

        if (txtMaPC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập Mã Phiếu chi");
            return;
        }

        if (txtMaNVPC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn mã Nhân viên");
            return;
        }

        if (txtNgayLapPC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập ngày lập phiếu chi");
            return;
        }

        if (txtTongPC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập Tổng giá trị phiếu chi");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tbPhieuChi.getModel();
        int dem = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 0).toString().equals(txtMaPC.getText())) {
                dem++;
            }
        }
        if (dem > 0) {
            JOptionPane.showMessageDialog(null, "Mã Phiếu chi này đã tồn tại!!");
        } else {

            String ngayLap = txtNgayLapPC.getText();
            String tongPC = txtTongPC.getText();

            try {
                BigDecimal tong = new BigDecimal(tongPC);
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date ngayLapPC = dateFormat.parse(ngayLap);

                PhieuChiModel pc = new PhieuChiModel();
                pc.setMaPC(txtMaPC.getText());
                pc.setMaNV(txtMaNVPC.getText());
                pc.setNgayChi(ngayLapPC);
                pc.setTong(tong);

                Controller.PhieuChiControl pcDao = new Controller.PhieuChiControl();
                if (pcDao.themPC(pc) > 0) {
                    JOptionPane.showMessageDialog(this, "Thêm phiếu chi thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    hienThiDuLieuPC();
                    lamMoiPC();
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm phiếu chi thất bại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }
            } catch (ParseException ex) {

                ex.printStackTrace();
            }
        }

        // TODO add your handling code here:
    }

    public void suaPC() {
        if (txtMaPC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập Mã Phiếu chi");
            return;
        }

        if (txtMaNVPC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn mã Nhân viên");
            return;
        }

        if (txtNgayLapPC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập ngày lập phiếu chi");
            return;
        }

        if (txtTongPC.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập Tổng giá trị phiếu chi");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tbPhieuChi.getModel();
        int dem = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 0).toString().equals(txtMaPC.getText())) {
                dem++;
            }
        }
        if (dem == 0) {
            JOptionPane.showMessageDialog(null, "Không tồn tại mã phiếu chi này!!");
        } else {
            String ngayLap = txtNgayLapPC.getText();
            String tongPC = txtTongPC.getText();
            try {
                BigDecimal tong = new BigDecimal(tongPC);
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date ngayLapPC = dateFormat.parse(ngayLap);

                PhieuChiModel pc = new PhieuChiModel();
                pc.setMaPC(txtMaPC.getText());
                pc.setMaNV(txtMaNVPC.getText());
                pc.setNgayChi(ngayLapPC);
                pc.setTong(tong);

                PhieuChiControl pcDAO = new PhieuChiControl();
                if (pcDAO.suaPC(pc) > 0) {
                    JOptionPane.showMessageDialog(null, "Cập nhật phiếu chi thành công!!!");
                    hienThiDuLieuPC();
                    lamMoiPC();
                } else {
                    JOptionPane.showMessageDialog(null, "Cập nhật phiếu chi thất bại!!!");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public void xoaPC() {
        String tf = txtMaPC.getText();
        if (tf.equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mã phiếu chi!!!");
            return;
        }

        PhieuChiControl pcDAO = new PhieuChiControl();
        int kt = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?");
        if (kt == JOptionPane.YES_OPTION) {
            if (pcDAO.xoaPC(txtMaPC.getText())) {
                JOptionPane.showMessageDialog(null, "Xóa phiếu chi thành công!!!");
                hienThiDuLieuPC();
                lamMoiPC();
            } else {
                JOptionPane.showMessageDialog(null, "Xóa phiếu chi thất bại!!!");
            }
        } else {
            return;
        }
    }

    public void ThemPT() {

        if (txtMaPT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập Mã Phiếu thu");
            return;
        }

        if (txtMaNVPT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn mã Nhân viên");
            return;
        }

        if (txtNgayLapPT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập ngày lập phiếu thu");
            return;
        }

        if (txtTongPT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập Tổng giá trị phiếu thu");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tbPhieuThu.getModel();
        int dem = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 0).toString().equals(txtMaPT.getText())) {
                dem++;
            }
        }
        if (dem > 0) {
            JOptionPane.showMessageDialog(null, "Mã Phiếu thu này đã tồn tại!!");
        } else {

            String ngayLap = txtNgayLapPT.getText();
            String tongPC = txtTongPT.getText();

            try {
                BigDecimal tong = new BigDecimal(tongPC);
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date ngayLapPC = dateFormat.parse(ngayLap);

                PhieuThuModel pt = new PhieuThuModel();
                pt.setMaPT(txtMaPT.getText());
                pt.setMaNV(txtMaNVPT.getText());
                pt.setNgayThu(ngayLapPC);
                pt.setTong(tong);

                PhieuThuControl ptc = new PhieuThuControl();
                if (ptc.themPT(pt) > 0) {
                    JOptionPane.showMessageDialog(this, "Thêm phiếu thu thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    hienThiDuLieuPT();
                    lamMoiPT();
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm phiếu thu thất bại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }
            } catch (ParseException ex) {

                ex.printStackTrace();
            }
        }
    }

    public void suaPT() {
        if (txtMaPT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập Mã Phiếu thu");
            return;
        }

        if (txtMaNVPT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn mã Nhân viên");
            return;
        }

        if (txtNgayLapPT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập ngày lập phiếu thu");
            return;
        }

        if (txtTongPT.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập Tổng giá trị phiếu thu");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tbPhieuThu.getModel();
        int dem = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 0).toString().equals(txtMaPT.getText())) {
                dem++;
            }
        }
        if (dem == 0) {
            JOptionPane.showMessageDialog(null, "Không tồn tại mã phiếu thu này!!");
        } else {
            String ngayLap = txtNgayLapPT.getText();
            String tongPC = txtTongPT.getText();
            try {
                BigDecimal tong = new BigDecimal(tongPC);
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date ngayLapPC = dateFormat.parse(ngayLap);

                PhieuThuModel pc = new PhieuThuModel();
                pc.setMaPT(txtMaPT.getText());
                pc.setMaNV(txtMaNVPT.getText());
                pc.setNgayThu(ngayLapPC);
                pc.setTong(tong);

                PhieuThuControl pcDAO = new PhieuThuControl();
                if (pcDAO.suaPT(pc) > 0) {
                    JOptionPane.showMessageDialog(null, "Cập nhật phiếu thu thành công!!!");
                    hienThiDuLieuPT();
                    lamMoiPT();
                } else {
                    JOptionPane.showMessageDialog(null, "Cập nhật phiếu thu thất bại!!!");
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    
    public void xoaPT() {
        String tf = txtMaPT.getText();
        if (tf.equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mã phiếu thu!!!");
            return;
        }

        PhieuThuControl pcDAO = new PhieuThuControl();
        int kt = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa không?");
        if (kt == JOptionPane.YES_OPTION) {
            if (pcDAO.xoaPT(txtMaPT.getText())) {
                JOptionPane.showMessageDialog(null, "Xóa phiếu thu thành công!!!");
                hienThiDuLieuPT();
                lamMoiPT();
            } else {
                JOptionPane.showMessageDialog(null, "Xóa phiếu thu thất bại!!!");
            }
        } else {
            return;
        }
    }
    
    public void lamMoiPC() {
        txtMaNVPC.setText("");
        txtMaPC.setText("");
        loadComBoBoxMaNhanVienPC();
        txtNgayLapPC.setText("");
        txtTongPC.setText("");
    }
    public void lamMoiPT() {
        txtMaNVPT.setText("");
        txtMaPT.setText("");
        loadComBoBoxMaNhanVienPT();
        txtNgayLapPT.setText("");
        txtTongPT.setText("");
    }
    
    public void timKiemPC(){
        String maPC = txtTimKiemPC.getText();
        if(maPC.equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mã phiếu chi cần tìm kiếm!!!");
            return;
        }
        PhieuChiControl pcDAO = new PhieuChiControl();
        dspc = pcDAO.timPC(maPC);
        
        DefaultTableModel dftbl = (DefaultTableModel)tbPhieuChi.getModel();
        dftbl.setRowCount(0);
        
        for(PhieuChiModel pc : dspc) {
            String mapc = pc.getMaPC();
            String manv = pc.getMaNV();
            Date ngaychi = pc.getNgayChi();
            BigDecimal tong = pc.getTong();
            Object[] row = new Object[]{mapc, manv, ngaychi, tong};
            dftbl.addRow(row);
        }
    }
    
    public void timKiemPT(){
        String maPT = txtTimKiemPT.getText();
        if(maPT.equals("")) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mã phiếu thu cần tìm kiếm!!!");
            return;
        }
        PhieuThuControl ptDAO = new PhieuThuControl();
        dspt = ptDAO.timPT(maPT);
        
        DefaultTableModel dftbl = (DefaultTableModel)tbPhieuThu.getModel();
        dftbl.setRowCount(0);
        
        for(PhieuThuModel pt : dspt) {
            String mapt = pt.getMaPT();
            String manv = pt.getMaNV();
            Date ngaythu = pt.getNgayThu();
            BigDecimal tong = pt.getTong();
            Object[] row = new Object[]{mapt, manv, ngaythu, tong};
            dftbl.addRow(row);
        }
    }
}
