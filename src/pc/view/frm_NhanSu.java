/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pc.view;

import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pc.controler.KhachHangControl;
import pc.controler.NhanVienControl;
import pc.model.KhachHangModel;
import pc.model.NhanVienModel;

/**
 *
 * @author Administrator
 */
public class frm_NhanSu extends javax.swing.JFrame {

    /**
     * Creates new form frm_NhanSU
     */
    public frm_NhanSu() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // Xử lý khi form được đóng
                frm_MeNu formMeNu = new frm_MeNu();
                formMeNu.setVisible(true);
                formMeNu.setLocationRelativeTo(null);
            }
        });
        loadThongTinNhanVien();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMaNhanVien = new javax.swing.JTextField();
        txtTenNhanVien = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        txtSoDienThoai = new javax.swing.JTextField();
        txtChucVu = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnThoat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý nhân sự");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Mã nhân viên");

        jLabel2.setText("Tên nhân viên");

        jLabel3.setText("Ngày sinh");

        jLabel4.setText("Địa chỉ");

        jLabel5.setText("Số điện thoại");

        jLabel6.setText("Vị trí");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã nhân viên", "Tên nhân viên", "Ngày sinh", "Địa chỉ", "Số điện thoại", "Chức vụ"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(txtSoDienThoai)
                    .addComponent(txtChucVu))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(btnThem)
                .addGap(52, 52, 52)
                .addComponent(btnSua)
                .addGap(46, 46, 46)
                .addComponent(btnXoa)
                .addGap(44, 44, 44)
                .addComponent(btnThoat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(65, 65, 65))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)))
                        .addGap(41, 41, 41)
                        .addComponent(txtChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(65, 65, 65))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnThoat))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Thông tin nhân viên", jPanel1);

        getContentPane().add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 660));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        tbleBanMouseClicked(evt);
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        dispose();
        frm_MeNu formMeNu = new frm_MeNu();
        formMeNu.setVisible(true);
        formMeNu.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        themNhanVien();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        suaNhanVien();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        xoaNhanVien();
    }//GEN-LAST:event_btnXoaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_NhanSu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_NhanSu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_NhanSu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_NhanSu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_NhanSu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtChucVu;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSoDienThoai;
    private javax.swing.JTextField txtTenNhanVien;
    // End of variables declaration//GEN-END:variables

    public void loadThongTinNhanVien() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        NhanVienControl nvcontrControl = new NhanVienControl();
        ArrayList<NhanVienModel> ds = nvcontrControl.layThongTinComBoBoxNhanVien();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        for (int i = 0; i < ds.size(); i++) {
            String manv = ds.get(i).getMaNhanVien();
            String tennv = ds.get(i).getTenNhanVien();
            String SDT = ds.get(i).getSoDienThoai();
            String diachi = ds.get(i).getDiaChi();
            String ngaysinh = dateFormat.format(ds.get(i).getNgaySinh());
            String chucVu = ds.get(i).getChucVu();
            Object[] row = new Object[]{manv, tennv, ngaysinh, diachi, SDT, chucVu};
            model.addRow(row);
            jTable1.setModel(model);
        }

    }

    private void tbleBanMouseClicked(MouseEvent evt) {
        if (this.jTable1.getSelectedRow() >= 0) {
            String MaNhanVien = this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 0).toString();
            txtMaNhanVien.setText(MaNhanVien);
            String TenNhanVien = this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 1).toString();
            txtTenNhanVien.setText(TenNhanVien);
            String NgaySinh = this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 2).toString();
            txtNgaySinh.setText(NgaySinh);
            String DiaChi = this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 3).toString();
            txtDiaChi.setText(DiaChi);
            String SoDienThoai = this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 4).toString();
            txtSoDienThoai.setText(SoDienThoai);
            String ChucVu = this.jTable1.getValueAt(this.jTable1.getSelectedRow(), 5).toString();
            txtChucVu.setText(ChucVu);
        }
    }

    public void themNhanVien() {
        if (txtMaNhanVien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập mã nhân viên");
            return;
        }

        if (txtTenNhanVien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập Tên nhân viên");
            return;
        }

        if (txtNgaySinh.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập ngày sinh nhân viên");
            return;
        }

        if (txtDiaChi.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập Địa chỉ nhân viên");
            return;
        }

        if (txtSoDienThoai.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập Số điện thoại nhân viên");
            return;
        }

        if (txtChucVu.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập Chức vụ nhân viên");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int dem = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 0).toString().equals(txtMaNhanVien.getText())) {
                dem++;
            }
        }
        if (dem > 0) {
            JOptionPane.showMessageDialog(null, "Mã Khách Hàng này đã tồn tại!!");
        } else {
            String ngaySinhString = txtNgaySinh.getText();

            try {
                // Chuyển đổi ngày sinh từ chuỗi sang kiểu Date
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date ngaySinh = dateFormat.parse(ngaySinhString);

                // Tạo đối tượng NHANVIEN và thiết lập giá trị
                NhanVienModel nv = new NhanVienModel();
                nv.setMaNhanVien(txtMaNhanVien.getText());
                nv.setTenNhanVien(txtTenNhanVien.getText());
                nv.setNgaySinh(ngaySinh); // Sử dụng ngày sinh đã chuyển đổi
                nv.setDiaChi(txtDiaChi.getText());
                nv.setSoDienThoai(txtSoDienThoai.getText());
                nv.setChucVu(txtChucVu.getText());

                NhanVienControl tbDao = new NhanVienControl();

                if (tbDao.insertNhanVien(nv) > 0) {
                    JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    loadThongTinNhanVien();
                    lamMoi();
                } else {

                    JOptionPane.showMessageDialog(this, "Thêm nhân viên thất bại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
        }

    }

    public void suaNhanVien() {
        if (txtMaNhanVien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập mã nhân viên");
            return;
        }

        if (txtTenNhanVien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập Tên nhân viên");
            return;
        }

        if (txtNgaySinh.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập ngày sinh nhân viên");
            return;
        }

        if (txtDiaChi.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập Địa chỉ nhân viên");
            return;
        }

        if (txtSoDienThoai.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập Số điện thoại nhân viên");
            return;
        }

        if (txtChucVu.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "vui lòng nhập Chức vụ nhân viên");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int dem = 0;
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getValueAt(i, 0).toString().equals(txtMaNhanVien.getText())) {
                dem++;
            }
        }
        if (dem == 0) {
            JOptionPane.showMessageDialog(null, "Không tồn tại mã nhân viên này!!");
        } else {
            String ngaySinhString = txtNgaySinh.getText();

            try {
                // Chuyển đổi ngày sinh từ chuỗi sang kiểu Date

                // Tạo đối tượng NHANVIEN và thiết lập giá trị
                NhanVienModel nv = new NhanVienModel();
                nv.setMaNhanVien(txtMaNhanVien.getText());
                nv.setTenNhanVien(txtTenNhanVien.getText());
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date ngaySinh = dateFormat.parse(ngaySinhString);
                nv.setNgaySinh(ngaySinh); // Sử dụng ngày sinh đã chuyển đổi
                nv.setDiaChi(txtDiaChi.getText());
                nv.setSoDienThoai(txtSoDienThoai.getText());
                nv.setChucVu(txtChucVu.getText());
                NhanVienControl tbDao = new NhanVienControl();
                if (tbDao.updateNhanVien(nv) > 0) {
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    loadThongTinNhanVien();
                    lamMoi();
                } else {

                    JOptionPane.showMessageDialog(this, "Cập nhật nhân viên thất bại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }
            } catch (ParseException ex) {

            }
        }

    }

    public void xoaNhanVien() {

        int index = jTable1.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên cần xóa");
            return;
        }
        NhanVienControl tbDao = new NhanVienControl();
        int alert = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn xóa nhân viên này chứ?");
        if (alert == JOptionPane.YES_OPTION) {
            boolean result = tbDao.deleteNhanVien(jTable1.getValueAt(index, 0).toString());

            if (result) {
                JOptionPane.showMessageDialog(this, "Xóa nhân viên thành công");
                loadThongTinNhanVien();
                lamMoi();
            } else {
                JOptionPane.showMessageDialog(this, "Lỗi hệ thống", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
            return;
        }
    }

    public void lamMoi() {
        txtMaNhanVien.setText("");
        txtTenNhanVien.setText("");
        txtNgaySinh.setText("");
        txtDiaChi.setText("");
        txtSoDienThoai.setText("");
        txtChucVu.setText("");
    }

}
